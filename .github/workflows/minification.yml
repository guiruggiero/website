name: Code minification

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    branches: [live]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  minify-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install CLI tools
        run: |
          npm install -g html-minifier@latest lightningcss-cli@latest terser@latest

      - name: Minify HTML
        run: |
          find . -maxdepth 1 -name "*.html" -print0 | xargs -0 -P 4 -I {} html-minifier {} -o {} --collapse-whitespace --remove-comments --remove-redundant-attributes --remove-script-type-attributes --use-short-doctype --collapse-boolean-attributes --remove-empty-attributes --remove-style-link-type-attributes --minify-css --minify-js || exit 1

      - name: Minify CSS
        run: |
          find ./styles -name "*.css" -print0 | xargs -0 -P 4 -I {} lightningcss -m {} -o {} || exit 1

      - name: Minify JavaScript and create source maps
        run: |
          cd modules/
          find . -name "*.js" -print0 | xargs -0 -P 4 -I {} sh -c 'terser "$1" --module --compress --mangle --source-map "filename=\"$(basename "$1" .js).min.js.map\",url=\"$(basename "$1" .js).min.js.map\",root=\"https://guiruggiero.com/modules\"" -o "${1%.js}.min.js" || exit 1' sh {}

      - name: Upload source to Sentry
        uses: getsentry/action-release@v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: guiruggiero
          SENTRY_PROJECT: website
        with:
          sourcemaps: ./modules

      - name: Delete unminified JavaScript
        run: |
          find ./modules \( -name "*.js" -not -name "*.min.js" \) -print0 | xargs -0 -P 4 -I {} rm {} || exit 1

      - name: Push changes to "live-min" branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add --all
          git commit -m "Automated minification and deployment of ${{ github.sha }}"
          git push --force -u origin live:live-min

      - name: Purge Cloudflare cache for HTML/CSS/JavaScript only
        env:
          ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          EMAIL: ${{ secrets.EMAIL_GUI }}
          AUTH_TOKEN: ${{ secrets.CLOUDFLARE_PURGE_CACHE }}
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${ZONE_ID}/purge_cache" -H "X-Auth-Email: ${EMAIL}" -H "Authorization: Bearer ${AUTH_TOKEN}" -H "Content-Type: application/json" --data '{"files": ["https://guiruggiero.com/*.html", "https://guiruggiero.com/styles/*", "https://guiruggiero.com/modules/*"]}'
